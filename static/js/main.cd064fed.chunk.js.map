{"version":3,"sources":["App.js","index.js"],"names":["App","useState","username","email","password","firstName","lastName","phNumber","panNumber","age","address","pincode","setError","formValues","setFormValues","formErrors","setFormErrors","isSubmit","setIsSubmit","handleChange","e","target","name","value","useEffect","console","log","Object","keys","length","validate","values","errors","search","test","match","currentYear","Date","getFullYear","year","split","newage","className","JSON","stringify","undefined","onSubmit","preventDefault","type","placeholder","onChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd064fed.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const initialValues = { username: \"\", email: \"\", password: \"\" ,firstName:\"\",lastName:\"\",phNumber:\"\",panNumber:\"\",age:\"\",address:\"\",pincode:\"\",setError:\"\"};\n  const [formValues, setFormValues] = useState(initialValues);\n  const [formErrors, setFormErrors] = useState({});\n  const [isSubmit, setIsSubmit] = useState(false);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues({ ...formValues, [name]: value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setFormErrors(validate(formValues));\n    setIsSubmit(true);\n  };\n\n\n  useEffect(() => {\n    console.log(formErrors);\n    if (Object.keys(formErrors).length === 0 && isSubmit) {\n      console.log(formValues);\n    }\n  }, [formErrors]);\n  const validate = (values) => {\n    const errors = {};\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n\n      /*-------------------------------------------------- Username --------------------------------------------*/\n    if (!values.username) {\n      errors.username = \"Username is required!\";\n    }\n    else if (values.username.search(/^[A-Za-z][A-Za-z0-9]+$/)) {\n      errors.username = \"Username should be alpha-numeric characters \";\n    }\n         /*-------------------------------------------------- Email --------------------------------------------*/\n    if (!values.email) {\n      errors.email = \"Email is required!\";\n    } else if (!regex.test(values.email)) {\n      errors.email = \"This is not a valid email format!\";\n    }\n     /*-------------------------------------------------- Password --------------------------------------------*/\n\n    if (!values.password) {\n      errors.password = \"Password is required\"; \n    } else if (values.password.length < 8) {\n      errors.password = \"Password must be more than 8 characters\";\n    } else if (values.password.search(/[0-9]/)==-1) {\n      errors.password = \"Password must have 1 numeric character\";\n    }\n    else if (values.password.search(/[A-Z]/)==-1) {\n      errors.password = \"Password must have 1 Uppercase Character\";\n    }\n    else if (values.password.search(/[!/@/#/$/%/^/&/*/(/)/-/_/+/=]/)==-1) {\n      errors.password = \"Password must have 1 special character\";\n    }\n\n         /*-------------------------------------------------- First Name --------------------------------------------*/\n    if (!values.firstName) {\n      errors.firstName = \"First Name is required!\";\n    }\n\n         /*-------------------------------------------------- Last Name --------------------------------------------*/\n    if (!values.lastName) {\n      errors.lastName = \"Last Name is required!\";\n    }\n\n         /*-------------------------------------------------- Phone Number --------------------------------------------*/\n    if (!values.phNumber) {\n      errors.phNumber = \"Mobile Number is required!\";\n    }\n    else if (!values.phNumber.match(/^\\+?([0-9]{2})\\)?[-. ]?([0-9]{4})[-. ]?([0-9]{4})$/)) {\n      errors.phNumber = \"Enter Numbers only & it should be only 10 digit\";\n    }\n\n      /*-------------------------------------------------- PAN Number --------------------------------------------*/\n\n    if (!values.panNumber) {\n      errors.panNumber = \"PAN Number is required!\";\n    }\n\n    else if (!values.panNumber.match(/^[A-Z]{5}[0-9]{4}[A-Z]{1}$/)) {\n      \n      errors.panNumber = \"PAN Number is not Valid!\";\n    }\n\n\n      /*-------------------------------------------------- Age --------------------------------------------*/\n      if (!values.age) {\n        errors.age = \"Age is required!\";\n      }\n \n    const currentYear = new Date().getFullYear();\n    const year = values.age.split(\"-\")[0];\n    const newage = currentYear - year;\n    console.log(currentYear)\n    console.log(year)\n     console.log (values.age)\n     console.log (newage)\n     if (newage < 18) {\n          errors.age = \"Age should be greater than 18!\";\n        } \n      \n\n        /*-------------------------------------------------- Address --------------------------------------------*/\n        if (!values.address) {\n          errors.address = \"Address is required!\";\n        }\n     /*-------------------------------------------------- Pincode --------------------------------------------*/\n     if (!values.pincode) {\n      errors.pincode = \"PinCode is required!\";\n    }\n    else if (!values.pincode.match(/^[1-9]{1}[0-9]{2}\\s{0,1}[0-9]{3}$/)) {\n      errors.pincode = \"PinCode is not Valid!\";\n    }\n    \n    return errors;\n  };\n\n  return (\n    <div className=\"container\">\n      {Object.keys(formErrors).length === 0 && isSubmit ? (\n        <div className=\"ui message success\">Registered  successfully</div>\n      ) : \n      (\n        <pre>{JSON.stringify( undefined, 2)}</pre>\n        //for printing values just add values or initial value here as a first argument\n      )}\n\n      <form onSubmit={handleSubmit}>\n        <h1>User Registration Form</h1>\n        <div className=\"ui divider\"></div>\n        <div className=\"ui form\">\n       {/*-------------------------------------------------- Username --------------------------------------------*/}\n          <div className=\"field\">\n            <label>Username</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"Username\"\n              value={formValues.username}\n              onChange={handleChange}\n            />\n          </div>\n          <p>{formErrors.username}</p>\n          {/*-------------------------------------------------- Password --------------------------------------------*/}\n          <div className=\"field\">\n            <label>Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password \"\n              value={formValues.password}\n              onChange={handleChange}\n            />\n          </div>\n          <p>{formErrors.password}</p>\n          {/*-------------------------------------------------- User First Name --------------------------------------------*/}\n          <div className=\"field\">\n            <label>User First Name</label>\n            <input\n              type=\"text\"\n              name=\"firstName\"\n              placeholder=\"User First Name\"\n              value={formValues.firstName}\n              onChange={handleChange}\n            />\n          </div>\n          <p>{formErrors.firstName}</p>\n{/*-------------------------------------------------- User Last Name--------------------------------------------*/}\n           \n          <div className=\"field\">\n            <label>User Last Name</label>\n            <input\n              type=\"text\"\n              name=\"lastName\"\n              placeholder=\"User Last Name\"\n              value={formValues.lastName}\n              onChange={handleChange}\n            />\n          </div>\n          <p>{formErrors.lastName}</p>\n          \n   {/*-------------------------------------------------- Email --------------------------------------------*/}\n\n          <div className=\"field\">\n            <label>Email</label>\n            <input\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"Email\"\n              value={formValues.email}\n              onChange={handleChange}\n            />\n          </div>\n          <p>{formErrors.email}</p>\n      \n      {/*-------------------------------------------------- User Mobile Number --------------------------------------------*/}\n         \n          <div className=\"field\">\n            <label>User Mobile Number</label>\n            <input\n              type=\"mobile\"\n              name=\"phNumber\"\n              placeholder=\"10 digit mobile Number\"\n              value={formValues.phNumber}\n              onChange={handleChange}\n            />\n          </div>\n          <p>{formErrors.phNumber}</p>\n{/*-------------------------------------------------- User PAN Number --------------------------------------------*/}\n          <div className=\"field\">\n            <label>User PAN  Number</label>\n            <input\n              type=\"mobile\"\n              name=\"panNumber\"\n              placeholder=\"PAN Number\"\n              value={formValues.panNumber}\n              onChange={handleChange}\n            />\n          </div>\n          <p>{formErrors.panNumber}</p>\n\n{/* --------------------------------------------------  Age --------------------------------------------*/}\n          <div className=\"field\">\n            <label>Age</label>\n            <input\n              type=\"date\"\n              name=\"age\"\n              placeholder=\"dd/mm/yyyy\"\n              value={formValues.age}\n              onChange={handleChange}\n            />\n          </div>\n          <p>{formErrors.age}</p>\n\n\n          \n\n\n{/*-------------------------------------------------- User Address --------------------------------------------*/}\n          <div className=\"field\">\n            <label>Address</label>\n            <input\n              type=\"text\"\n              name=\"address\"\n              placeholder=\"Enter your Address\"\n              value={formValues.address}\n              onChange={handleChange}\n            />\n          </div>\n          <p>{formErrors.address}</p>\n\n{/*-------------------------------------------------- Pin Code --------------------------------------------*/}\n          <div className=\"field\">\n            <label>Pin Code</label>\n            <input\n              type=\"text\"\n              name=\"pincode\"\n              placeholder=\"Enter Pin Code\"\n              value={formValues.pincode}\n              onChange={handleChange}\n            />\n          </div>\n          <p>{formErrors.pincode}</p>\n\n          <button className=\"fluid ui button blue\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}